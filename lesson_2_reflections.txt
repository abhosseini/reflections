Q: What happens when you initialize a repository? Why do you need to do it?
a) a directory called ".git" is created that saves all the meta data about the changes we make in the files or the "commits"!


Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
a) It is intermediary between the working directory and the repository.
b) It offers the ability to only have certain files to be saved in the repository instead ALL files.


Q: How can you use the staging area to make sure you have one commit per logical change?
a) By comparing the staged file with the most recent commit by running "git diff --staged"


Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
a) experimenting with a new feature
b) re-writing a part of the code
c) creating a new version of the code in a different language


Q: How do the diagrams help you visualize the branch structure?
a) By knowing the parent of each commit


Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
a) A merged branch
b) Because ...


Q: What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
a) Resolving conflicts would be more accurate when done by human even though it might be tedious! Git doesn't really understand the logic behind the changes/commits made!



